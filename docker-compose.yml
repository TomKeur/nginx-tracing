version: '3'
services:

  client-app:
    build:
      context: ./client-app
    networks:
      - nginxmesh
    environment:
      - INSTANA_DEV=1
      - target_url=http://kong:8080/nginx-demo

  kong-database:
    image: postgres:9.6
    restart: always
    networks:
      - nginxmesh
    environment:
      POSTGRES_DB: kong
      POSTGRES_USER: kong
      POSTGRES_PASSWORD: kong
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "kong"]
      interval: 5s
      timeout: 5s
      retries: 5

  kong-migration:
    image: kong:2.1-ubuntu
    command: "kong migrations bootstrap"
    networks:
      - nginxmesh
    restart: on-failure
    environment:
      KONG_DATABASE: postgres
      KONG_PG_HOST: kong-database
      KONG_PG_DATABASE: kong
      KONG_PG_USER: kong
      KONG_PG_PASSWORD: kong
    links:
      - kong-database
    depends_on:
      - kong-database

  kong:
    restart: on-failure
    build:
      context: ./kong
      args:
        download_key: ${download_key}
        agent_key: ${agent_key}
        nginx_version: '1.17.2'
    environment:
      KONG_PROXY_LISTEN: 0.0.0.0:8080
      KONG_PROXY_LISTEN_SSL: 0.0.0.0:8443
      KONG_ADMIN_LISTEN: 0.0.0.0:8001
      KONG_DATABASE: postgres
      KONG_PG_HOST: kong-database
      KONG_PG_DATABASE: kong
      KONG_PG_USER: kong
      KONG_PG_PASSWORD: kong
    depends_on:
      - kong-migration
      - kong-database
    volumes:
      - ./kong/kong.conf:/etc/kong/kong.conf
      - ./kong/tracing/glibc-libinstana_sensor.so:/opt/instana/tracing/libinstana_sensor.so
      - ./kong/tracing/glibc-openresty-1.15.8-ngx_http_ot_module.so:/opt/instana/tracing/nginx_instana_module.so
    networks:
      nginxmesh:
        aliases:
          - nginx-gateway
    expose:
      - "8080"

  # nginx:
  #   build:
  #     context: ./nginx
  #     args:
  #       download_key: ${download_key}
  #       agent_key: ${agent_key}
  #       nginx_version: '1.17.2'
  #   networks:
  #     nginxmesh:
  #       aliases:
  #         - nginx-gateway
  #   volumes:
  #     - ./nginx/nginx.conf:/etc/nginx/nginx.conf
  #     - ./nginx/instana-config.json:/etc/instana-config.json
  #   expose:
  #     - "8080"

  server-app:
    build:
      context: ./server-app
    networks:
      nginxmesh:
        aliases:
          - server-app
    environment:  
      - INSTANA_DEV=1
      - SERVER_PORT=8080
    expose:
      - "8080"

  agent:
    image: instana/agent
    pid: "host"
    privileged: true
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /dev:/dev
      - /sys:/sys
      - /var/log:/var/log
    networks:
      nginxmesh:
        aliases:
          - instana-agent
    environment:
      - INSTANA_AGENT_ENDPOINT=${agent_endpoint:-saas-us-west-2.instana.io}
      - INSTANA_AGENT_ENDPOINT_PORT=${agent_endpoint_port:-443}
      - INSTANA_DOWNLOAD_KEY=${download_key}
      - INSTANA_AGENT_KEY=${agent_key}
      - INSTANA_AGENT_ZONE=${agent_zone:-nginx-tracing-demo}
    expose:
      - "42699"

networks:
  nginxmesh: {}
